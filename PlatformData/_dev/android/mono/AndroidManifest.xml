<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.nemo.androidu3d">

    <uses-permission android:name= "android.permission.INTERNET" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
    <uses-permission android:name= "android.permission.READ_PHONE_STATE" />
    <uses-permission android:name="android.permission.READ_LOGS" />
	<uses-permission android:name="android.permission.WAKE_LOCK" />

    <!-- GCloudVoice权限配置 START-->
    <uses-permission android:name="android.permission.MODIFY_AUDIO_SETTINGS" />  
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />  
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.RECORD_AUDIO" /> 
    <!-- GCloudVoice权限配置 END -->

    <!-- XGPush权限配置 START-->
    <!-- 这里__your_package_name在打包时候会改app包名 -->
    <!-- 注：小米push 需要的权限 begin -->
    <permission android:name="__your_package_name.permission.MIPUSH_RECEIVE" android:protectionLevel="signature" />
    <uses-permission android:name="__your_package_name.permission.MIPUSH_RECEIVE" />
    <!-- 注：小米push 需要的权限 end -->
    <!-- 注：魅族push 需要的权限 begin -->
    <uses-permission android:name="com.meizu.flyme.push.permission.RECEIVE"></uses-permission>
    <permission android:name="__your_package_name.push.permission.MESSAGE" android:protectionLevel="signature"/>
    <uses-permission android:name="__your_package_name.push.permission.MESSAGE"></uses-permission>
    <!--  兼容flyme3.0配置权限-->
    <uses-permission android:name="com.meizu.c2dm.permission.RECEIVE" />
    <permission android:name="__your_package_name.permission.C2D_MESSAGE" android:protectionLevel="signature"></permission>
    <uses-permission android:name="__your_package_name.permission.C2D_MESSAGE"/>
    <!-- 注：魅族push 需要的权限 end -->
    <uses-permission android:name="android.permission.REQUEST_INSTALL_PACKAGES" /> 
    <!-- XGPush权限配置 END-->
	
	<supports-screens android:smallScreens="true" android:normalScreens="true" android:largeScreens="true" android:xlargeScreens="true" android:anyDensity="true" />
	<application android:theme="@style/UnityThemeSelector" android:icon="@drawable/app_icon" android:label="@string/app_name" android:isGame="true" android:banner="@drawable/app_banner">
		<activity android:label="@string/app_name" android:screenOrientation="sensorLandscape" android:launchMode="singleTask" android:configChanges="mcc|mnc|locale|touchscreen|keyboard|keyboardHidden|navigation|orientation|screenLayout|uiMode|screenSize|smallestScreenSize|fontScale|layoutDirection" android:name="com.nemo.androidu3d.GameMainActivity">
			<intent-filter>
				<action android:name="android.intent.action.MAIN" />
				<category android:name="android.intent.category.LAUNCHER" />
				<category android:name="android.intent.category.LEANBACK_LAUNCHER" />
			</intent-filter>
			<meta-data android:name="unityplayer.UnityActivity" android:value="true" />
		</activity>
		
		<!-- bugly begin -->
		<meta-data android:name="BUGLY_APPID" android:value="49e8c9e4d6" />
		<meta-data android:name="BUGLY_ENABLE_DEBUG" android:value="false" />
		<!-- bugly end -->

		<!-- GPush begin -->
		<!-- 【必须】 信鸽receiver广播接收 -->
        <receiver android:name="com.tencent.android.tpush.XGPushReceiver"
                  android:process=":xg_service_v3">
            <intent-filter android:priority="0x7fffffff">
                <!-- 【必须】 信鸽SDK的内部广播 -->
                <action android:name="com.tencent.android.tpush.action.SDK"/>
                <action android:name="com.tencent.android.tpush.action.INTERNAL_PUSH_MESSAGE"/>
                <!-- 【必须】 系统广播：开屏和网络切换 -->
                <action android:name="android.intent.action.USER_PRESENT"/>
                <action android:name="android.net.conn.CONNECTIVITY_CHANGE"/>
                <!-- 【可选】 一些常用的系统广播，增强信鸽service的复活机会，请根据需要选择。当然，你也可以添加APP自定义的一些广播让启动service -->
                <action android:name="android.bluetooth.adapter.action.STATE_CHANGED"/>
                <action android:name="android.intent.action.ACTION_POWER_CONNECTED"/>
                <action android:name="android.intent.action.ACTION_POWER_DISCONNECTED"/>
            </intent-filter>
        </receiver>

        <!-- 【必须】 信鸽service -->
        <service
                android:name="com.tencent.android.tpush.service.XGPushServiceV3"
                android:exported="true"
                android:persistent="true"
                android:process=":xg_service_v3"/>
        <service
                android:name="com.xiaomi.push.service.XMPushService"
                android:enabled="true"
                android:process=":pushservice"/>
        <service
                android:name="com.xiaomi.push.service.XMJobService"
                android:enabled="true"
                android:exported="false"
                android:permission="android.permission.BIND_JOB_SERVICE"
                android:process=":pushservice"/>
        <!-- 注：此service必须在3.0.1版本以后（包括3.0.1版本）加入 -->
        <service
                android:name="com.xiaomi.mipush.sdk.PushMessageHandler"
                android:enabled="true"
                android:exported="true"/>
        <service
                android:name="com.xiaomi.mipush.sdk.MessageHandleService"
                android:enabled="true"/>
        <!-- 注：此service必须在2.2.5版本以后（包括2.2.5版本）加入 -->
        <receiver
                android:name="com.xiaomi.push.service.receivers.NetworkStatusReceiver"
                android:exported="true">
            <intent-filter>
                <action android:name="android.net.conn.CONNECTIVITY_CHANGE"/>

                <category android:name="android.intent.category.DEFAULT"/>
            </intent-filter>
        </receiver>

        <receiver
                android:name="com.xiaomi.push.service.receivers.PingReceiver"
                android:exported="false"
                android:process=":pushservice">
            <intent-filter>
                <action android:name="com.xiaomi.push.PING_TIMER"/>
            </intent-filter>
        </receiver>

        <receiver
                android:exported="true"
                android:name="com.nemo.androidu3d.XiaomiMessageReceiver">
            <intent-filter>
                <action android:name="com.xiaomi.mipush.RECEIVE_MESSAGE"/>
            </intent-filter>
            <intent-filter>
                <action android:name="com.xiaomi.mipush.MESSAGE_ARRIVED"/>
            </intent-filter>
            <intent-filter>
                <action android:name="com.xiaomi.mipush.ERROR"/>
            </intent-filter>
        </receiver>

        <!-- 【必须】 提高service的存活率 -->
        <service
                android:name="com.tencent.android.tpush.rpc.XGRemoteService"
                android:exported="true">
            <intent-filter>
                <!-- 【必须】 请修改为当前APP包名 .PUSH_ACTION, 如demo的包名为：com.qq.xgdemo -->
                <action android:name="__your_package_name.PUSH_ACTION"/>
            </intent-filter>
        </service>

        <!-- 【注意】 如果被打开的activity是启动模式为SingleTop，SingleTask或SingleInstance，请根据通知的异常自查列表第8点处理-->
        <activity
                android:name="com.tencent.android.tpush.XGPushActivity"
                android:exported="false">
            <intent-filter>
                <!-- 若使用AndroidStudio，请设置android:name="android.intent.action"-->
                <action android:name="android.intent.action"/>
            </intent-filter>
        </activity>

        <provider
                android:name="com.tencent.android.tpush.XGPushProvider"
                android:authorities="__your_package_name.AUTH_XGPUSH"
                android:exported="true"/>

        <provider
                android:name="com.tencent.android.tpush.SettingsContentProvider"
                android:authorities="__your_package_name.TPUSH_PROVIDER"
                android:exported="false"/>

        <provider
                android:name="com.tencent.mid.api.MidProvider"
                android:authorities="__your_package_name.TENCENT.MID.V3"
                android:exported="true">
        </provider>

        <!-- 【必须】 __xg_push_app_id为APP的AccessId，“21”开头的10位数字，中间没空格 -->
        <meta-data
                android:name="XG_V2_ACCESS_ID"
                android:value="__xg_push_app_id"/>
        <!-- 【必须】 __xg_push_app_key为APP的AccessKey，“A”开头的12位字符串，中间没空格 -->
        <meta-data
                android:name="XG_V2_ACCESS_KEY"
                android:value="__xg_push_app_key"/>

        <!-- 注：华为push 需要的 start -->
        <meta-data
                android:name="com.huawei.hms.client.appid"
                android:value="__huawei_push_app_id">
        </meta-data>

        <activity
                android:name="com.huawei.hms.activity.BridgeActivity"
                android:configChanges="orientation|locale|screenSize|layoutDirection|fontScale"
                android:excludeFromRecents="true"
                android:exported="false"
                android:hardwareAccelerated="true"
                android:theme="@android:style/Theme.Translucent">
            <meta-data
                    android:name="hwc-theme"
                    android:value="androidhwext:style/Theme.Emui.Translucent"/>
        </activity>

        <provider
                android:name="com.huawei.hms.update.provider.UpdateProvider"
                android:authorities="__your_package_name.hms.update.provider"
                android:exported="false"
                android:grantUriPermissions="true">
        </provider>

        <provider
                android:name="com.huawei.updatesdk.fileprovider.UpdateSdkFileProvider"
                android:authorities="__your_package_name.updateSdk.fileProvider"
                android:exported="false"
                android:grantUriPermissions="true">
        </provider>

        <receiver android:name="com.huawei.hms.support.api.push.PushEventReceiver">
            <intent-filter>

                <!-- 接收通道发来的通知栏消息，兼容老版本PUSH -->
                <action android:name="com.huawei.intent.action.PUSH"/>
            </intent-filter>
        </receiver>

        <receiver android:name="com.nemo.androidu3d.HuaweiMessageReceiver">
            <intent-filter>

                <!-- 必须,用于接收TOKEN -->
                <action android:name="com.huawei.android.push.intent.REGISTRATION"/>
                <!-- 必须，用于接收消息 -->
                <action android:name="com.huawei.android.push.intent.RECEIVE"/>
                <!-- 可选，用于点击通知栏或通知栏上的按钮后触发onEvent回调 -->
                <action android:name="com.huawei.android.push.intent.CLICK"/>
                <!-- 可选，查看PUSH通道是否连接，不查看则不需要 -->
                <action android:name="com.huawei.intent.action.PUSH_STATE"/>
            </intent-filter>
        </receiver>
        <!-- 注：华为push 需要的 end -->

        <!-- 注：魅族push 需要的 start -->
        <receiver android:name="com.nemo.androidu3d.MeizuMessageReceiver">
            <intent-filter>
                <!-- 接收push消息 -->
                <action android:name="com.meizu.flyme.push.intent.MESSAGE"/>
                <!-- 接收register消息-->
                <action android:name="com.meizu.flyme.push.intent.REGISTER.FEEDBACK"/>
                <!-- 接收unregister消息-->
                <action android:name="com.meizu.flyme.push.intent.UNREGISTER.FEEDBACK"/>

                <action android:name="com.meizu.c2dm.intent.REGISTRATION"/>
                <action android:name="com.meizu.c2dm.intent.RECEIVE"/>

                <category android:name="__your_package_name"></category>
            </intent-filter>
        </receiver>

        <service
                android:name="com.meizu.cloud.pushsdk.NotificationService"
                android:exported="true"/>

        <receiver android:name="com.meizu.cloud.pushsdk.SystemReceiver">
            <intent-filter>
                <action android:name="com.meizu.cloud.pushservice.action.PUSH_SERVICE_START"/>
                <category android:name="android.intent.category.DEFAULT"/>
            </intent-filter>
        </receiver>
        <!-- 注：魅族push 需要的 end -->
        <!-- GPush end -->

        <meta-data android:name="android.max_aspect" android:value="2.2" />
	</application>
</manifest>
